@model IEnumerable<Balance>

<div>
    @if (Model.Count() > 0)
    {
        <div class="mb-4">
            <h3 class="text-sm">Tokens</h3>
            <div class="rounded-lg overflow-hidden flex h-3 my-2">
                @{
                    var totalBalance = Model.Where(u => u.CoinPrice != null).Sum(u => u.Value * u.CoinPrice.Price);
                    var tokenCount = 0;
                    decimal accPercentage = 0;
                    foreach (var token in Model)
                    {
                        tokenCount++;
                        var CoinBalance = token.Value * (token.CoinPrice != null ? token.CoinPrice.Price : 0);
                        var percentage = (CoinBalance * 100) / totalBalance;
                        var color = "";
                        if (tokenCount < 4) accPercentage += percentage;
                        if (tokenCount == 1)
                        {
                            color = "bg-pink-200";
                        }
                        else if (tokenCount == 2)
                        {
                            color = "bg-emerald-300";
                        }
                        else if (tokenCount == 3)
                        {
                            color = "bg-rose-400";
                        }
                        else if (tokenCount == 4)
                        {
                            color = "bg-amber-200";
                            percentage = 100 - accPercentage;
                        }
                        else
                        {
                            break;
                        }
                        <div class="@(color)" style="width: @(percentage)%;"></div>
                    }
                }
            </div>
            <div class="flex flex-wrap text-xs">
                @{
                    var tokenCount2 = 0;
                    decimal accPercentage2 = 0;
                    foreach (var token in Model)
                    {
                        tokenCount2++;
                        var CoinBalance2 = token.Value * (token.CoinPrice != null ? token.CoinPrice.Price : 0);
                        var percentage2 = (CoinBalance2 * 100) / totalBalance;
                        var color2 = "";
                        var tokenName = token.ContractName;
                        if (tokenCount2 < 4) accPercentage2 += percentage2;
                        if (tokenCount2 == 1)
                        {
                            color2 = "bg-pink-200";
                        }
                        else if (tokenCount2 == 2)
                        {
                            color2 = "bg-emerald-300";
                        }
                        else if (tokenCount2 == 3)
                        {
                            color2 = "bg-rose-400";
                        }
                        else if (tokenCount2 == 4)
                        {
                            color2 = "bg-amber-200";
                            percentage2 = 100 - accPercentage2;
                            tokenName = "Others";
                        }
                        else
                        {
                            break;
                        }
                        <div class="flex items-center mr-5 mb-2">
                            <span class="block h-3 w-3 rounded-full @(color2)"></span>
                            <span class="mx-1">@(tokenName)</span>
                            <span class="text-neutral-400">@(percentage2.ToString("N2"))%</span>
                        </div>
                    }
                }
            </div>
        </div>
        <div>
            @foreach (var token in Model)
            {
                <button class="list-child flex items-center" type="button">
                    <img src="@(token.LogoUrl)" alt="@(token.ContractName)"
                class="block rounded-full w-10 h-10 mr-3"
                onerror="this.onerror=null;this.src='/img/placeholder.png';">
                    <div class="flex flex-col text-left">
                        <span>@(token.ContractName)</span>
                        <small class="text-sm font-light text-neutral-400">$@(token.CoinPrice?.Price.ToString("N2"))</small>
                    </div>
                    <div class="flex flex-col text-right ml-auto">
                        <span>
                            @(token.Value > 0 ? token.Value.ToString("N2") : 0) @(token.Symbol)
                        </span>
                        @{
                            var tokenBalance = token.Value * (token.CoinPrice != null ? token.CoinPrice.Price : 0);
                            if (tokenBalance > 0)
                            {
                                <small class="text-sm font-light text-neutral-400">$@(tokenBalance.ToString("N2"))</small>
                            }
                        }
                    </div>
                    <svg role="img" class="arrow-icon ml-3 w-6 h-6">
                        <use xlink:href="/img/sprite.svg#icon-chevron-right"></use>
                    </svg>
                </button>
            }
        </div>
    }
    else
    {
        <div class="text-center">
            <h3 class="text-sm">No tokens found</h3>
        </div>
    }
</div>